import groovy.json.JsonBuilder
import groovy.json.JsonSlurper

buildscript {
	repositories {
		maven { url = 'https://files.minecraftforge.net/maven' }
		maven { url = 'https://repo.spongepowered.org/maven' }
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
		classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
	}
}

plugins {
    id "com.wynprice.cursemaven" version "2.1.1"
}


apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

archivesBaseName = project.archives_base_name
version = project.mod_version
group = "${project.maven_group}.${project.mod_id}"

minecraft {
	mappings channel: "${project.mapping_channel}", version: "${project.mapping_version}"
	accessTransformer = file("src/main/resources/META-INF/accesstransformer.cfg")

	runs {
		client {
			properties 'forge.logging.console.level': 'debug'
			properties 'fml.earlyprogresswindow': 'false'
			properties 'mixin.env.disableRefMap': 'true'
			workingDirectory project.file('run')
			arg "-mixin.config=charm.mixins.json"
			source sourceSets.main
			jvmArgs "-Xmx1500M"
		}

		server {
			properties 'forge.logging.console.level': 'debug'
			properties 'mixin.env.disableRefMap': 'true'
			workingDirectory project.file('run')
			arg "-mixin.config=charm.mixins.json"
			source sourceSets.main
		}
	}
}

dependencies {
	minecraft "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"

	// third party
	compile fg.deobf("vazkii.quark:Quark:${project.quark_version}")
	compile fg.deobf("vazkii.autoreglib:AutoRegLib:${project.arl_version}")
	compileOnly fg.deobf("mezz.jei:${project.jei_version}:api")
	runtimeOnly fg.deobf("mezz.jei:${project.jei_version}")

	// for testing apotheosis
	//compile fg.deobf("curse.maven:apotheosis:3095843")
	//compile fg.deobf("curse.maven:placebo:3092113")

	// for testing buzzier bees
	//compile fg.deobf("curse.maven:abnormals-core:3154969")
	//compile fg.deobf("curse.maven:buzzier-bees:3154937")

	//compile fg.deobf("enchantedwolves:enchantedwolves:1.1.0.1")
	//compile fg.deobf("CraftingTweaks:CraftingTweaks:1.16.3-12.2.0")
}

repositories {
	maven {
		// for AutoRegLib
		name "blamejared"
		url "https://maven.blamejared.com/"
	}
	maven {
		// for JEI
		name "progwml6"
		url "https://dvs1.progwml6.com/files/maven"
	}
	maven {
		// for Mappings
		name "gigaherz"
		url "https://dogforce-games.com/maven/"
	}
	flatDir {
		// for including local jar files
		dirs "libs"
	}
}

mixin {
	add sourceSets.main, 'charm.mixins.refmap.json'
}

processResources {
	// replace stuff in mcmod.info, nothing else
	filesMatching("META-INF/mods.toml") {
		expand 'mod_version': project.version
	}

	exclude("META-INF/*.variants")

	//expand resource templates
	filesMatching("**/*.template.json") {
		JsonBuilder json = new JsonBuilder(new JsonSlurper().parseText(it.file.text))
		String template = new JsonBuilder(json.content.template).toPrettyString()
		def v = json.content.variants
		Iterable<String> variants
		if (v instanceof String) variants = file("${sourceSets.main.resources.srcDirs[0]}/META-INF/${v}.variants").readLines().findAll { !it.isEmpty() }
		else variants = v
		File dir = it.relativePath.parent.getFile(file("$buildDir/resources/main"))
		dir.mkdirs()
		String name = it.name.replace(".template.json", ".json")
		for (variant in variants) {
			def file = new File(dir, name.replace("VARIANT", variant))
			file.createNewFile()
			file.text = template.replace("VARIANT", variant)
		}
		it.exclude()
	}
}

// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
    archiveName = "${project.archives_base_name}-${project.mod_version}.${extension}"

	manifest {
        attributes([
            "Specification-Title": "${project.mod_id}",
            "Specification-Vendor": "svenhjol",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": "${project.mod_id}",
            "Implementation-Version": "${project.mod_version}",
            "Implementation-Vendor": "svenhjol",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "charm.mixins.json"
        ])
    }

    exclude "**/*.bat"
    exclude "**/*.psd"
    exclude "**/*.exe"
    exclude "**/unused"
}
